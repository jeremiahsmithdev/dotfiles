# Tmux AI Workflow Configuration
# Source this file in your main tmux.conf with: source-file ~/dotfiles/tmux-ai.conf

# AI Workflow Bindings
bind-key A new-window -n "AI-Chat" "claude chat"
bind-key C-a split-window -h -c "#{pane_current_path}" "claude code"
bind-key M-a popup -E -w 80% -h 80% "claude chat"

# Context gathering shortcuts
bind-key G new-window -n "Git-Context" "git log --oneline -20 | fzf --preview 'git show {1}'"
bind-key F new-window -n "File-Context" "find . -type f -name '*.py' -o -name '*.js' -o -name '*.lua' | fzf --preview 'bat {}'"

# AI-powered analysis
bind-key P run-shell "~/dotfiles/tmux-ai-wrapper.sh analyze_project"
bind-key C-p popup -E -w 90% -h 90% "~/dotfiles/tmux-ai-wrapper.sh analyze_project"

# Quick AI commands with current pane content
bind-key R run-shell "tmux capture-pane -p | claude 'Review this terminal output and suggest improvements'"
bind-key E run-shell "tmux capture-pane -p | claude 'Explain what happened in this terminal session'"
bind-key D run-shell "tmux capture-pane -p | claude 'Debug any errors in this output'"

# AI commit workflow
bind-key C-g run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_commit"

# Context-aware file editing
bind-key C-e run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_edit"

# AI file and branch analysis
bind-key M-f run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_files"
bind-key M-b run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_branches"

# Smart AI suggestions based on current context
bind-key S run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_smart"

# AI code review for staged changes
bind-key C-r run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_review"

# Quick AI chat popup
bind-key C-c popup -E -w 80% -h 80% "~/dotfiles/tmux-ai-wrapper.sh ai_chat"

# AI test generation
bind-key T run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_test"

# AI documentation generation  
bind-key M-d run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_docs"

# AI refactoring suggestions
bind-key M-r run-shell "cd #{pane_current_path} && ~/dotfiles/tmux-ai-wrapper.sh ai_refactor"

# Session management with AI context
bind-key C-s run-shell "tmux list-sessions | fzf --preview 'tmux capture-pane -t {} -p' | cut -d: -f1 | xargs tmux switch-client -t"

# AI-powered session naming
bind-key N command-prompt -p "AI session name:" "run-shell 'tmux rename-session \"$(echo %1 | claude \"Suggest a concise session name for: %1\")\"'"

# Capture and analyze pane content
bind-key C-l run-shell "tmux capture-pane -p > /tmp/tmux-capture && ~/dotfiles/tmux-ai-wrapper.sh ai_chat 'Analyze this terminal output: $(cat /tmp/tmux-capture)'"

# AI-powered command suggestions
bind-key ? run-shell "echo 'Current directory: #{pane_current_path}' | claude 'Suggest useful commands for this context'"

# Quick project setup with AI
bind-key I run-shell "cd #{pane_current_path} && echo 'Project: $(basename $(pwd))' | claude 'Suggest initial setup commands for this project'"

# AI-powered log analysis
bind-key L run-shell "find #{pane_current_path} -name '*.log' | head -1 | xargs tail -50 | claude 'Analyze this log file for issues'"

# Status line integration for AI mode (COMMENTED OUT to avoid conflicts with gruvbox theme)
# The following lines were causing tmux format strings to appear in session names
# set -g status-right "#{?#{==:#{client_key_table},ai},AI,} #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S "

# AI key table for advanced workflows
bind-key a switch-client -T ai
bind-key -T ai c run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_commit"
bind-key -T ai e run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_edit"
bind-key -T ai p run-shell "~/dotfiles/tmux-ai-wrapper.sh analyze_project"
bind-key -T ai f run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_files"
bind-key -T ai b run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_branches"
bind-key -T ai s run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_smart"
bind-key -T ai r run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_review"
bind-key -T ai t run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_test"
bind-key -T ai d run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_docs"
bind-key -T ai R run-shell "~/dotfiles/tmux-ai-wrapper.sh ai_refactor"
bind-key -T ai q switch-client -T root

# AI workflow status indicators (COMMENTED OUT to avoid conflicts with gruvbox theme)
# set -g @ai_mode_indicator "#{?#{==:#{client_key_table},ai},AI,}"
# set -g status-left "#{@ai_mode_indicator} [#S] "

# Automatic AI suggestions based on directory changes (COMMENTED OUT to reduce noise)
# set-hook -g after-new-window 'run-shell "sleep 1 && ai_smart"'
# set-hook -g after-split-window 'run-shell "sleep 1 && ai_smart"'